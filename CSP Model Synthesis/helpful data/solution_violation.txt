// solution (optimal) with objective 293.296682422977
// Quality Incumbent solution:
// MILP objective                                 2.9329668242e+02
// MILP solution norm |x| (Total, Max)            8.79973e+03  3.87501e+02
// MILP solution error (Ax=b) (Total, Max)        0.00000e+00  0.00000e+00
// MILP x bound error (Total, Max)                5.68434e-13  1.13687e-13
// MILP x integrality error (Total, Max)          0.00000e+00  0.00000e+00
// MILP slack bound error (Total, Max)            8.07177e-12  8.07177e-12
// MILP indicator slack bound error (Total, Max)  2.27374e-13  1.13687e-13
// 

production = [[0
             0 0 0 50 57.5 57.5 57.5 58.824 50 50]
             [18 17.143 15 15 16.875 18.984 17.999 17.143 17.143 15 15]
             [250 232.86 215 235.1 282.12 338.55 387.5 335.36 304.03 243.23
             200]];
loadFactor = [[0 0 0 0 0.5 0.575 0.575 0.575 0.58824 0.5 0.5]
             [0.51429 0.4898 0.42857 0.42857 0.48214 0.54241 0.51426 0.4898
             0.4898 0.42857 0.42857]
             [0.625 0.58214 0.5375 0.58776 0.70531 0.84638 0.96875 0.83839
             0.76008 0.60807 0.5]];
penalties = [[16 0 0 0 16 16 16 16 16 16 0]
             [16 16 16 16 0 0 0 0 0 0 0]
             [0 0 0 1 1 1 1 0 1 1 0]
             [3 3 3 3 3 0 3 0 0 3 3]
             [2 2 2 2 2 2 2 2 2 2 2]
             [0 0 0 0 1 0 0 0 1 0 0]
             [0 0 0 0 2 0 0 0 2 0 0]
             [4 4 4 4 4 4 4 4 4 4 4]
             [0 1 1 1 1 0 1 1 1 1 1]
             [1 1 1 1 0 0 1 0 0 1 1]];
running = [[0 0 0 0 1 1 1 1 1 1 1]
             [1 1 1 1 1 1 1 1 1 1 1]
             [1 1 1 1 1 1 1 1 1 1 1]];
consStopping = [[1 2 3 4 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0]];
consRunning = [[0 0 0 0 1 2 3 4 5 6 7]
             [1 2 3 4 5 6 7 8 9 10 11]
             [1 2 3 4 5 6 7 8 9 10 11]];
