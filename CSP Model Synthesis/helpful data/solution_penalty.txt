// solution (optimal) with objective 220
// Quality Incumbent solution:
// MILP objective                                 2.2000000000e+02
// MILP solution norm |x| (Total, Max)            8.59307e+03  3.69600e+02
// MILP solution error (Ax=b) (Total, Max)        4.26326e-14  2.84217e-14
// MILP x bound error (Total, Max)                2.22045e-16  2.22045e-16
// MILP x integrality error (Total, Max)          4.44089e-16  2.22045e-16
// MILP slack bound error (Total, Max)            1.57456e-11  8.07177e-12
// MILP indicator slack bound error (Total, Max)  2.62235e-13  1.42109e-13
// 

penalties = [[16  0  0  0 16 16 16 16 16 0 0]
             [16 16 16 16 0 0 0 0 0 0 0]
             [ 0  0  0  1 1 0 0 0 1 1 0]
             [ 3  3  3  3 3 0 3 0 0 3 3]
             [ 2  0  0  0 0 0 0 0 0 0 0]
             [ 0  0  0  0 0 0 0 0 0 0 0]
             [ 0  0  0  0 0 0 0 0 0 0 0]
             [ 4  4  4  4 0 0 0 0 0 4 4]
             [ 0  0  0  0 0 0 0 0 0 0 0]
             [ 1  1  1  1 0 0 0 0 0 1 1]];
production = [[0 0 0 0 50 50.582 54.123 54.123 54.123 50.334 50]
             [18 20.115 20 20.417 22.222 25 25 22.544 24 21 20]
             [250 229.89 212.12 233.33 280 336 369.6 333.33 300 240 200]];
loadFactor = [[0 0 0 0 0.5 0.50582 0.54123 0.54123 0.54123 0.50334 0.5]
             [0.51429 0.57471 0.57143 0.58333 0.63492 0.71429 0.71429 0.64411
             0.68571 0.6 0.57143]
             [0.625 0.57471 0.5303 0.58333 0.7 0.84 0.924 0.83333 0.75 0.6
             0.5]];
running = [[0 0 0 0 1 1 1 1 1 1 1]
             [1 1 1 1 1 1 1 1 1 1 1]
             [1 1 1 1 1 1 1 1 1 1 1]];
consStopping = [[1 2 3 4 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0]
             [0 0 0 0 0 0 0 0 0 0 0]];
consRunning = [[0 0 0 0 1 2 3 4 5 6 7]
             [1 2 3 4 5 6 7 8 9 10 11]
             [1 2 3 4 5 6 7 8 9 10 11]];
